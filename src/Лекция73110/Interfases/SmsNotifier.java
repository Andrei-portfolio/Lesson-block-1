package Лекция73110.Interfases;

    // ИНТЕРФЕЙСЫ

    // Система отправки уведомлений. Допустим у нас интернет магазин и мы хотим отправлять пользователю сообщение
    // о том, что его товар доставлен в пункт выдачи

    // Пример будет простой, без каких либо полей и с одним только методом

    //ЗДЕСЬ ПРЕДСТАВЛЕН КЛАСС КОТОРЫЙ ШЛЕТ УВЕДОМЛЕНИЯ И НАЗОВЕМ ЕГО SmsNotifie

    // public class SmsNotifier { //Так было в самом начале, пока не имплементировали

public class SmsNotifier implements Notifier {// имплементируем (т.е. расширяем Notifier или интерфейс).
    // Теперь если код метода public void notifyUser (Human human, String adress) ......., представенный ниже
    // мы удалим, то будет ошибка. Основной причиной которой является, что интерфейс запрещает SmsNotifier
    // без метода notifyUser. Т.е. теперь java благодаря интерфейсу защищает от глупой ошибки, в части создания
    // TelegramNotifier без метода для отправки уведомлений. Забыли, стерли и т.д.

    public SmsNotifier() { //По идее конструктор создавать не нужно, так как мы туда передавать ничего не будем.
        //Но мы его создали для наглядности

    }

    public void notifyUser(Human human, String adress) {
        System.out.println(human.getPhone());
        System.out.println(" Ваш товар прибыл к пункт выдачи " + adress);

    }
}
