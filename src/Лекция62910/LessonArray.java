package Лекция62910;

public class LessonArray {

//Вспомним про массивы и цыклы из предыдущей лекции

    public static void main(String[] args) {


        int[] numbers = new int[4];
        numbers[0] = 15;
        numbers[1] = 20;
        numbers[2] = 100;

    for (int i = 0; i < numbers.length; i++) { //Если вместо for мы выберем for1, то программа выдаст нам шаблон цикла
        System.out.println(numbers[i]);// i++ это увеличение на 1, всё равно, что i=i+1
        // System.out.println(i + "элемент равен: " + numbers[i]) // Можно ещё вот так получить более красивую запись
        }

        // В нашем случае, вызывая sout в консоль, мы условно говорим выведи все элементы от нулевого [0] до последнего
        // numbers.length, т.е. до четвертого [4]. А нельзя ли взять массив и сразу сказать выведи все элементы?

        //Можно, в этом поможет вторая разновидность цикла for each. вызвать его можно следующим образом: когда мы
        // написали for, то она была подчеркнута и подсвечена желтым цветом. Так вот когда мы на неё наведем и нажмём
        // на Replace with enhanced..... то написаный нами цикл преобразуется в следующий код

        for (int number : numbers) { // Мы говорим, у нас массив интовый? Да. Значит пишем int.
            System.out.println(number);
        }
        // Далее мы каким-то образом называем нашу переменную, можно number, или другое. Но как правило в честь
        // массива называют только чтобы различалось. Далее двоеточее и указываем наш массив, с которым работаем.
        // number - это каждый элемент массива, т.е. это и есть 15, потом 20.... и т.д.

        // Данный код и код который выше, совершенно одинаковые и выдадут совершенно одинаковый ответ в консоль.

        // Преимущества, что данный цикл короче, не надо заморачиваться с цифрами, если нам нужен весь массив.
        // А также мы избавляемся от i.
    }
}

