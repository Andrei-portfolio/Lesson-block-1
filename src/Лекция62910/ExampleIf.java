package Лекция62910;

import java.util.Scanner;

public class ExampleIf {

    //ОПЕРАТОРЫ СРАВНЕНИЯ, ОПЕРАТОРЫ ВЕТВЛЕНИЯ

    public static void main(String[] args) {


        // Пример применения операторов ветвления, это например, авторизация. Когда мы вводим логин и пароль, у нас
        // есть два пути 1) мы ввели всё верно и нас пускают на сайт 2) ввели не правильно, нас не пускают на сайт
        // Т.е. происходит ветвление, идем либо в одну сторону либо в другую. Поэтому мы должны уметь писать программу
        // Если пользователь ввел верные данные - запускаем на сайт, ИНАЧЕ не пускаем на сайт. Т.е. должна быть
        // одна такая программа, которая направляет по тому или иному пути.

        boolean x = true;
        System.out.println(x);

        // Основной силой данного метода boolean с его true или false, является не обычные запросы приведенные выше,
        // а как раз, например система авторизации. Если человек ввел пароль верно, то истина true. Если не верно
        // то false, он нам лжёт. В общем мы с помощью них как раз и будем создавать ветвления.
        // Данные boolean также появляются при использовании операторов сравнения, приведенных ниже

        System.out.println(10 > 5); // ответ true
        System.out.println(10 < 5); // ответ false
        System.out.println(10 == 10); // Обратить вниманее, что знак равенства при сравнении пишется как два символа ==
        // не путать с оператором присваивания, например X=5, Y=4 и т.д. Так принято
        // чтобы отличать операторы сравнения и присваивания.

        System.out.println(5 >= 5);//Также у нас есть знаки больше или равно,  меньше или равно.

        // Теперь можно приступить к созданию ветвлений

        if (10 > 5) // Переводится как ЕСЛИ.
        {
            System.out.println("Да, 10 больше, чем 5");
        }
        //В круглых скобках мы записываем условия.  Если результат в этих скобках равняется true, то то что мы пишем
        // внутри фигурных скобок будет выполнятся. Так же, как было с циклом. Программа запускается один
        // раз последовательно. Проверили, выполнили и пошли дальше. Если же в скобках напишем действие,
        // которое не выполняется (например 10==5), то увидим, что в терминале ничего нет, т.е. ответ не пришел.
        // А почему, потому что условие 10==5, не выполнилось, т.е. это ложь (false). Так как там false, то наша
        // фигурная скобочка не выполняется.

        //Более правдоподобный пример:

        // String url = "https://vk.ru"; //Далее напишем программу: Проверь, если начинается с https, то "защищенный
        // протокол". Если с http, то "не защищенный протокол". Используем метод startsWith, который используется
        // для определения, начинается ли строка с указанного префикса

        // System.out.println(url.startsWith("https")); // Результат в терминале истина (true). Если нам приходит ответ
        // true/false, мы также можем применить оператор if. Для этого запишем следующую программу:


        String url = "https://vk.ru";

        if (url.startsWith("https")) {
            System.out.println("Защитное соединение");
        }

        //Если мы оставлем в String url = "https://vk.ru"; то ответ придет true. Если же мы убираем "s" из "https" и
        // оставляем String url = "http://vk.ru"; То по идее должен придти false. А если он нам скажет false, то
        //оператор if выполнятся не будет. Но этого мы не увидим. Это мы вроде как поняли, что соединение не защищено,
        //раз никакой информации не вывелось. Но если бы с вами не знали что у нас такой код. Как мы бы догадались,
        // что если в терминале тишина, то соединение не защищено? Никак бы не догадались. Возникает вопрос, как
        //вывести отрицательный ответ? А для этого у нас есть оператор ИНАЧЕ (ELSE). Данный оператор мы всегда пишем
        // после оператора if. И он подходит под все остальные случаи
//
        else {
            System.out.println("Незащищенное соединение");
        }

        // ELSE срабатывает только тогда, когда не срабатывает if. Т.е. если у нас false, значит автоматически
        // выполнится оператор else. А если сработал if, то компилятор не идёт в ELSE. Всё просто

        //Ещё один пример аналогичного действия. Своя динамическая скидочная система, например когда известен прокод

        // System.out.println("Введите промокод: "); //Кто знает java, тот знает что нам нужно поработать со сканером.
        // Что такое сканер - это отдельный класс для работы с данными. Позваляет работать с системой, с вводом данных
        // в систему. Соответственно, где то в начале программы мы ВСЕГО ЛИШЬ ОДИН РАЗ должны задать сканер.
        // Мы заведем здесь, чтобы всё было рядом

        Scanner scanner = new Scanner(System.in); //Сканер сканирует данные из системы
        System.out.println("Введите промокод: ");

        //Если мы запустим данную программу, то ничего не произошло. В терминале надпись "Введите промокод: ". И всё,
        // программа завершилась, о чем говорит надпись внизу - Process finished with exit code 0. А сканер ждёт, когда
        // мы его используем. Мы его запускаем с помощью следующей операции

        // scanner.nextLine(); // Это если нам нужно, чтобы он попросил нас ввести какое нибудь значение, какие то
        // данные. Обратим вниманее, что также осталась надпись в терминале "Введите промокод: ", но нет записи
        //  "Process finished with exit code 0", т.е. программа не завершенилась. А ниже нашей надписи в терминале
        // появился маркер, где мы можем напечатать что-то (строки/числа и т.д.). Вводим необходимое значение,
        //например промокод (Андрейка) и нажимаем Enter. Только после этого программа завершилась. Куда это
        // отправилось? Пока никуда. А чтобы это куда то отправилось, мы должны направить мышкой на nextLine, и
        // увидеть, что он нам в окне возвращает строку public String nextLine().
        // А РАЗ ОН НАМ ЕЁ ВОЗВРАЩАЕТ МЫ ДОЛЖНЫ ЕЁ ПРИНЯТЬ. Поэтому делаем следующее, добавляем перед
        // scanner.nextLine();

        String promocode = scanner.nextLine(); // Тем самым, мы говорим программе "СОХРАНИ ТАМ, ЧТО МЫ ВВЕДЁМ В
        // ТЕРМИНАЛЕ" В ПЕРЕМЕННУЮ ПРОМОКОД, А ПОТОМ ВЫВЕДИ ЭТУ ПЕРЕМЕННУЮ НА ЭКРАН. Отмечено, что nextLine можем
        // заменить любым нам известным типом данных nextInt, nextBoolean и т.д. В общем когда введешь scanner.next
        // весь список появится автоматически
        //
        //  Программу создали конечно банальную, но для понимания сканера это достаточно.
        // Теперь мы с этим прокодом можем сделать всё что угодно, выводить на экран, присваивать, менять и т.д.

        System.out.println(promocode); // Теперь в терминале нам предлагает ввести промокод. Вводим например 1986

        // Сильно в автотестах данный сканер не пригождается, в API тоже. Поэтому его мы изучим поверхностно.
        // Так как могут спросить на собеседовании. Например напишите программу, которая получает на вход данные.

        // Получается мы сохранили промокод, вывели его на экран. Теперь можем поместить его в if. Далее мы пишем
        // несколько условий, если promocode равен S1986S и если равен S2012S

        if (promocode.equals("S1986S")) ; // Знак == мы можем применять только для сравнения чисел, но не строки String.
        // При наведении на == , он нам даже предлагает equals. Мы его проходили в первой
        // домашке. Он позволяет проверять исходное содержимое строки. Т.е. данный код
        // не рабочий

        //Поэтому запишем нашу программу следующим образом:

        if (promocode.equals("S1986S")) // Т.е. ПЕРВОЕ условие, если promocode равен S1986S, "Поздравляю ваша скидка
        // составила 50%", если не верный промокод, то "Сожалею, вашей скидки
        // нихрена нету".

        {
            System.out.println("Поздравляю ваша скидка составила 50%");
        }

        if (promocode.equals("S2012S")) // ВТОРОЕ условие, promocode равен S2012S.
        //Отмечу сразу, чтобы программа сразу сработала, необходимо перед if поставить else. Для чего это, расписал
        // ниже. Ну а здесь не стал исправлять, так как чтобы соблюсти очередность подачи материала в лекции.
        // Чтобы при повторном просмотре было всё понятно и поочередно расписано.

        {
            System.out.println("Поздравляю ваша скидка составила ЧУТЬ БОЛЬШЕ - 99%");
        } else {
            System.out.println("Сожалею, вашей скидки нихрена нету");
        }

        // При выводе в терминал неправильного промокода, программа выдаст "Сожалею, вашей скидки нихрена нету". Супер.
        // При выводе в терминал второго промокода, выдаст "Поздравляю ваша скидка составила ЧУТЬ БОЛЬШЕ - 99%". Класс.
        // А вот при выводе в терминал первого промокода, ОБРАТИТЕ ВНИМАНЕЕ, программа выдаёт сразу две надписи
        // "Поздравляю ваша скидка составила 50%" и "Сожалею, вашей скидки нихрена нету". НЕПОРЯДОК.
        // А почему? Да потому, что оператор else срабатывает только к соседнему if, который находится над ним.
        // Т.е. наша else даже не в курсе, что у нас был ещё какой то if. Его вообще не интересует, что мы ввели
        // первый промокод S1986S правильно. Сработал и сработал, но программа пошла дальше, проверять второй if.
        // А так как программа не увидела второй промокод, у нас срабатывает else и добавляется соответствующая
        // запись "Сожалею, вашей скидки нихрена нету".
        // Т.е. еще раз. Наша else ничего не знает о других if, это не важно. Он переживает и волнуется только о своём
        // одном единственном if. Поидее у первого if должен быть свой else. Но опять же, это нашу проблему не исправит.
        // А исправит её else if следующее. данная операция объединяет всё во едино

        // else if (promocode.equals("S2012S")) // Здесь он не будет отрабатывать, нужно добавлять else выше
        //
        // Ко ВТОРОМУ условию if, в начале добавляем else.
        // С помощью данного оператора ИНАЧЕ ЕСЛИ (else if), программа проверяет сначала первый промокод и если он
        // подходит, то она не идет дальше, а всё ветвление заканчивается (завершается). Так как нет смысла идти дальше.
        // Если же первый не подходит, программа переходит ко второму с оператором ИНАЧЕ ЕСЛИ (else if).

        // И подытожим как работает программа ещё раз: Если промокод равен S1986S, то выведи его на экран, ИНАЧЕ ЕСЛИ
        // промокод равен S2012S выведи его, иначе выведи, что промокод не найден.


    }


}
