package Лекция142611.Tails.Methods;

public class QaEngineer extends Human {// Наследуемся, как результат QaEngineer имеет всё тоже самое, что и

    // его родительский класс Human. Все теже самые три метода. Но это не совсем так. Рассмотрим пример.
    public void test() {
        publicMethod();// Без проблем предлагает publicMethod
        //privateMethod();// А тут проблемка, НЕ ПРЕДЛАГАЕТ метод privateMethod. Потому что, к нему нельзя
                        // обратиться из вне, т.е. к нему можно обратиться только в классе Human и это
                        // касается всех, даже наследников. А мы хотим, чтобы метод был приватным для всех
                        // окружающих, НО НЕ ДЛЯ НАСЛЕДНИКОВ. ПОЭТОМУ ВОСПОЛЬЗУЕМСЯ МЕТОДОМ protected, С
                        // КОТОРОМ ДАННОЕ ТРЕБОВАНИЕ ВОЗМОЖНО
        protectedMethod();// Без проблем предлагает protectedMethod. Как мы помним protected работает как ,
                         // private но позволяет использовать методы наследникам. ВАЖНО!!! ОДНА ОСОБЕННОСТЬ,
                         // НАСЛЕДНИКИ МОГУТ ВЫЗВАТЬ МЕТОДЫ protected, ЕСЛИ ТОЛЬКО ОНИ НАХОДЯТСЯ В ОДНОМ ПАКЕТЕ
                         // С РОДИТЕЛЕМ. Т.Е В РАЗНЫХ ПАКЕТАХ НЕ ДАСТ, БУДЕТ ОШИБКА.


    /*
    Далее перейдём к ещё одному хвосту - ПАТТЕРНЫ ПРОЕКТИРОВАНИЯ. ЧТО ОЗНАЧАЕТ В ПЕРЕВОДЕ - "ШАБЛОН".
    ЭТО ЧТО ТО, ЧТО ПОЗВОЛЯЕТ РЕШИТЬ КАКУЮ ТО ЗАДАЧУ
     */

    }
}
