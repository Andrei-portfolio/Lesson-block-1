package Лекция142611.Tails;

public class Fabrica {

 /*
    Далее перейдём к ещё одному хвосту - ПАТТЕРНЫ ПРОЕКТИРОВАНИЯ. ЧТО ОЗНАЧАЕТ В ПЕРЕВОДЕ - "ШАБЛОН".
    ЭТО ЧТО ТО, ЧТО ПОЗВОЛЯЕТ РЕШИТЬ КАКУЮ ТО ЗАДАЧУ. Так вот, мы на самом деле уже раньше встречались
    с паттернами, но мы не знали что это были они. Как пример, в лекции 73110 в классе shop имеется
    следующий код.

  Notifier notifier; // У нас будет какой то объект, который реализует notifier

        if (typeOfNotifier.equals("СМС")) {//Если человек сказал СМС, значит смс
        notifier = new SmsNotifier();
    } else if (typeOfNotifier.equals("EMAIL")) {//Если человек сказал EMAIL, значит EMAIL
        notifier = new EmailNotifier();
    } else if (typeOfNotifier.equals("VIBER")) {//Если человек сказал EMAIL, значит VIBER
        notifier = new ViberNotifier();
    } else {                                    // Если человек ничего не сказал, что то другое значит Telegram
        notifier = new TelegramNotifier();
    }

    Это и есть паттерн под названием ФАБРИКА, но его необходимо немного доработать. БОЛЕЕ ПОДРОБНО ПРО ПАТЕРН
    ФАБРИКА МОЖНО ПОЧИТАТЬ В СТАТЬЕ https://javarush.com/groups/posts/2370-pattern-proektirovanija-factory, ПЛЮС
    ПРО НИХ НАПИСАНО В ШПАРГАЛКЕ КУЗНЕЦОВА АЛЕКСЕЯ https://habr.com/ru/articles/210288/.

    Вообще, в тестировании самые частые паттерны разработки - Декоратор, Фабрика и Синглтон, остальные очень
    редко встречал

    НО ВООБЩЕ ПАТТЕРНЫ ЭТО ТЕМА НЕ ДЛЯ НОВИЧКОВ. ПОДРОБНЕЕ С НИМИ ПОЗНАКОМИМСЯ КОГДА БУДЕМ ПИСАТЬ АВТО ТЕСТЫ.

      */


}