package Лекция111411.FuncInterfaces;

import java.util.List;

// ПРОДОЛЖЕНИЕ ConsumerDemo

public class ConsumerDemo2 {

    public static void main(String[] args) {
        List<String> names = List.of("Галина", "Александр", "Михаил", "Евгения"); // Создадим список строк:имена
        //и напишем метод, который будет выводить эти имена на экран
        List<String> secondNames = List.of("Маруся", "Фёдор", "Яков", "Елена");

        printName(names);
        printName(secondNames);
        // Только послесоздания метода private static void printName (List<String> names)
        // (ниже) мы можем вывести список в терминал
    }

    private static void printName(List<String> names) {//метод, который будет выводить  имена на экран
        System.out.println("Список имён: ");
        for (String name : names) {// с помощью for красиво оформим данный список в терминале
            System.out.println(name);
        }
        System.out.println("Конец списка");
    }
/* НО ЧТО ЕСЛИ ПЕРЕД НАМИ БУДЕТ СТОЯТЬ НОВАЯ ЗАДАЧА. НАПРИМЕР ВЫВЕСТИ В ТЕРМИНАЛ ТАКЖЕ ОБА СПИСКА,
НО ОДИН ИЗ НИХ names ОСТАВИТЬ ТАК КАК ЕСТЬ, А ДРУГОЙ secondNames В НИЖНЕМ РЕГИСТРЕ. Как же эту задачу
решить? Первое что приходит на ум, это создать ещё один в точности такой метод, и использовать
в нём метод toLoverCase. Как пример,

 */
        private static void printNameLoverCase(List<String> names) {//метод, который будет выводить  имена на экран
        System.out.println("Список имён: ");
        for (String name : names) {// с помощью for красиво оформим данный список в терминале
            System.out.println(name.toLowerCase());
        }
        System.out.println("Конец списка");
    }
/* НО ПОВТОР КОДА ЭТО ПЛОХО, ОТ ЭТОГО НАДО УХОДИТЬ. ВОТ КАК РАЗ ЗДЕСЬ МОЖЕМ ИСПОЛЬЗОВАТЬ ФУНКЦИОНАЛЬНЫЕ
    ИНТЕРФЕЙСЫ. ВСПОМНИМ ЧТО ТАКОЕ ИНТЕРФЕЙС - ЭТО ТО, ГДЕ ОПИСАНЫ МЕТОДЫ, КОТОРЫЕ МЫ ОБЯЗАНЫ
    РЕАЛИЗОВАТЬ.
    ЗАДАЧА ПЕРЕД НАМИ ОСТАЁТСЯ ТАЖЕ:  СПИСОК names ВЫВЕСТИ ТАК КАК ЕСТЬ, А ДРУГОЙ secondNames
    В НИЖНЕМ РЕГИСТРЕ. Т.е. метод который примет на вход наш список, а потом его реализует под наши
    требования. НАШ ФУНКЦ. ИНТЕРФЕЙС НАЗЫВАЕТСЯ - ЭТО ИНТЕРФЕЙС, КОТОРЫЙ ПРИНИМАЕТ НА ВХОД ОДИН ПАРАМЕТР,
    НЕ ВОЗВРАЩАЕТ НИЧЕГО, НО ВЫПОЛНЯЕТ КАКИЕ ТО ДЕЙСТВИЯ, КОТОРЫЕ МЫ САМИ ОПИШЕМ. КАК ЕГО РЕАЛИЗОВАТЬ

    ЧТОБЫ НЕ НАПУТАТЬ ПЕРЕЙДЁМ В ДРУГОЙ КЛАСС ConsumerDemo3
 */
}

