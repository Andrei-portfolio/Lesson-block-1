package Лекция101211;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;

public class CounterTask {

    public static void main(String[] args) throws IOException {

        //Задачка со счетчиками
        // Сразу в psvm прописываем throws IOException
        // Если файла нет, то его нужно создать, если файл есть то туда нужно добавить данные

            Path filePach = Path.of("counter.txt");
            if (Files.exists(filePach)) {// Это метод, который возвращает нам булевое значение Если файла нет,
                                        // то false, если существует то tru

                //План действий:
            //1) посмотреть значение в файле (например 1);
            // 2) увеличить на 1; Но мы не сможем увеличить на 1, т.к. у нас переменная String строка. А
            // для этого нужно использовать неизвестный для нас до сей поры класс Integer для работы
            // с целыми числами, для преобразования. Сохраним всё в новую переменную int intcounter
            // 3) записать это значение в файл;

            String counter = Files.readString(filePach);// 1) посмотреть значение в файле (например 1);
            int intCounter = Integer.parseInt(counter);// 2) перед тем, как увеличить на 1, преобразуем счетчик
                                                      // из строки в число, потому что мы считываем строку. Чтобы
                                                     // мы в файлах не писали, это будет строка. Использ. статич
                                                    // метод parseInt
            intCounter++; // 2) увеличим это значение на 1;
            // Files.writeString(filePach, intCounter);// 3) записать это значение в файл; НО программа ругается
            // на intCounter, так как она ожидает строку, поэтому нужно сделать обратную операцию, преобразовав
            // int в строку. И будет это выглядеть:
            //Files.writeString(filePach, String.valueOf(intCounter));// Т.е. для преобразования строки в число
            // использовали статичный метод "parseInt", а для обратного перевода числа в строку метод "valueOf"
            // parseInt - распарсить строку и преобразовать в int
            // valueOf - получить значение из параметра и превратить его в строку

            //Либо используем более длинный код. НО конечный результат один и тот же, поэтому оставим нижний
             counter = String.valueOf(intCounter);
             Files.writeString(filePach, counter);

        } else {
         Files.writeString(filePach,"1");// иначе вот в этот файл запиши "1"
                //Даже запустив терминал без System.out.println(), в наше файле увидим результат, как наш счетчик
                // работает. Сначала показывает 1, а далее после каждого запуска терминала прибавляет +1

                // Далее перейдем к следующей теме по работе с JSON
       }
    }
}

