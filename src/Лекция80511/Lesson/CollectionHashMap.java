package Лекция80511.Lesson;

import Лекция73110.Продолжение.Human;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class CollectionHashMap {

    public static void main(String[] args) {

        // Перейдем к HashMap - это что то типо словаря или ассоциативного массива. Здесь мы можем также
        //  использовать любые типы переменных. HashMap применяем, Когда нам недостаточно создать список и
        //  вместо инднксов (1, 2, 3 и т.д.) использовать более красивые и понятные обозначения названия,
        //  какие то ключи как в json (пара ключ - значение).


        Map<String, String> world = new HashMap<>();
        world.put("Россия", "Москва");   // Обратить вниманее, что  в HashMap нет метода get. А есть метод put
        // (String key - String value).
        world.put("США", "Вашингтон"); // С помощью него и добавляем. Данный метод работает по принципу ключ
        // - значение. Отмечу, что значение ключ должно быть УНИКАЛЬНЫМ. И если мы укажем одинаковый ключ,
        // то один из элементов (который написан первым стерается, а на его место перезаписывается написанный
        // последним
        world.put("Великобритания", "Лондон"); // В нашем случае Страна - Столица
        System.out.println(world);
        System.out.println(world.get("Россия"));//можем вызвать любой из элементов по наименованию, т.е. по ключу

        // В терминале мы получили данные в формате ключ значение {Россия=Москва, США=Вашингтон,
        // Великобритания=Лондон} Что не получилось бы при использовании ArrayList. В нем было бы только ключ
        // [Россия, США, Великобритания] Кроме того, в ArrayList мы можем вызвать только конкретный номер индекса
        // с помощью метода get. И надеятся, что мы не ошиблись с порядком Вместе с тем, в HashMap можем вызвать
        // любой из элементов по наименованию, т.е. по ключу Как пример:

        ArrayList worldList = new ArrayList();
        worldList.add("Россия");
        worldList.add("США");
        worldList.add("Великобритания");
        System.out.println(worldList);
        System.out.println(worldList.get(0));// можем вызвать только конкретный номер индекса с помощью метода get

        // Хороший пример использования HashMap это телефонный справочник с ключом ФИО и значением номер телефона

        // Вопрос от однокурсника: "А если использовать human в hashMap, то при добавлении через put, нужно также
        // будет указывать ключ и потом перечислять поля объекта(имя,возрат и тд и тп). Ответ: "Совершенно верно".
        // Ниже приведем пример.


        Map<String, Human> humans = new HashMap<>();
        humans.put("Джон", new Human("Джон", 34));
        humans.put("Джек", new Human("Джек", 20));

        System.out.println(humans);
    }
}
